@page "/houses/update/{id:int}"
@page "/houses/update"
@inject HttpClient Http
@using System.Net.Http.Json
@using Client.Models
@inject NavigationManager NavigationManager

@*Author: Susanna Renström*@

<h3>Uppdatera hus</h3>

    <label>Aktuellt hus</label>
    @if (House == null)
    {
        <p>Ett ögonblick...</p>
    }
    else
    {
     
    <EditForm Model="House" OnSubmit="Submit" FormName="edit">
       
        <div>
            <label>Mäklare</label>
            @if (Realtors != null)
            {
                <select @bind="RealtorId">
                    @foreach (var realtor in Realtors)
                    {
                       <option value="@realtor.RealtorId">@realtor.FirstName</option>
                    }
                </select>
            }
        </div>
        <div>
            <label>Kategori</label>
            @if (Categories != null)
            {
                <select @bind="CategoryId">
                    <option value="" selected>Välj kategori</option>
                    @foreach (var category in Categories)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                </select>
            }
        </div>
        <div>
            <label>Municipality</label>
            @if (Municipalities != null)
            {
                <select @bind="MunicipalityId">
                    @foreach (var municipality in Municipalities)
                    {
                        <option value="@municipality.MunicipalityId">@municipality.MunicipalityName</option>
                    }
                </select>
            }
        </div>
        <div>
            <label>Län</label>
            @if (Counties != null)
            {
                <select @bind="CountyId">
                    @foreach (var county in Counties)
                    {
                        <option value="@county.CountyId">@county.CountyName</option>
                    }
                </select>
            }
        </div>
        <div>

            <label>Bildgalleri</label>
            @foreach (var image in Images)
            {
                <div>
                    <label>Bild URL</label>
                    <InputText @bind-Value="image.ImageURL"></InputText>
                </div>
            }
        
        </div>
        <div>
            <label>Adress</label>
            <InputText id="adress" @bind-Value="House.Adress" />
        </div>
        <div>
            <label>Pris</label>
            <InputNumber id="price" @bind-Value="House.Price" />
        </div>
        <div>
            <label>Boarea</label>
            <InputNumber @bind-Value="House.LivingArea" />
        </div>
        <div>
            <label>Biarea</label>
            <InputNumber @bind-Value="House.AuxiliaryArea" />
        </div>
        <div>
            <label>Tomtarea</label>
            <InputNumber @bind-Value="House.PlotArea" />
        </div>
        <div>
            <label>Beskrivning</label>
            <InputTextArea @bind-Value="House.Description" />
        </div>
        <div>
            <label>Antal rum</label>
            <InputNumber @bind-Value="House.NumberOfRooms" />
        </div>
        <div>
            <label>Månadsavgift</label>
            <InputNumber @bind-Value="House.MonthlyFee" />
        </div>
        <div>
            <label>Årlig driftkostnad</label>
            <InputNumber @bind-Value="House.OperatingCostPerYear" />
        </div>
        <div>
            <label>Byggår</label>
            <InputNumber @bind-Value="House.YearOfConstruction" />
        </div>


        
        <button type="submit">Spara</button>
    </EditForm>
}
@code {

    [Parameter]
    public int Id { get; set; }
    House House { get; set; } = new House();

    private int CountyId { get; set; }
    public List<County> Counties { get; set; } = new List<County>();

    private int MunicipalityId { get; set; }
    private List<Municipality> Municipalities { get; set; } = new List<Municipality>();

    public List<Image> Images { get; set; } = new List<Image>();

    private int RealtorId { get; set; }
    private List<Realtor> Realtors { get; set; } = new List<Realtor>();

    private int CategoryId { get; set; }
    private List<Category> Categories { get; set; } = new List<Category>();
    /// <summary>
    /// 
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {   
        Counties = await Http.GetFromJsonAsync<List<County>>("api/county");
        Municipalities = await Http.GetFromJsonAsync<List<Municipality>>("api/municipality");
        Images = await Http.GetFromJsonAsync<List<Image>>("api/image");
        Categories = await Http.GetFromJsonAsync<List<Category>>("api/category");
        Realtors = await Http.GetFromJsonAsync<List<Realtor>>("api/realtor");

        var result = await Http.GetFromJsonAsync<House>($"api/house/{(int)Id}");
        if (result != null)
        { House = result; }
    }

    public async Task Submit()
    {
        House.County = await Http.GetFromJsonAsync<County>($"api/county/{CountyId}");
        House.Municipality = await Http.GetFromJsonAsync<Municipality>($"api/municipality/{MunicipalityId}");
        House.Category = await Http.GetFromJsonAsync<Category>($"api/category/{CategoryId}");
        House.Realtor = await Http.GetFromJsonAsync<Realtor>($"api/realtor/{RealtorId}");
       
            var result = await Http.PutAsJsonAsync<House>($"api/house/{(int)Id}", House);
        
        if (result.IsSuccessStatusCode)
        {
        NavigationManager.NavigateTo($"/houses");
        }
    }


}

   
