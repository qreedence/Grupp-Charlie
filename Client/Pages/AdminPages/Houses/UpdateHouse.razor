@page "/houses/update/{id:int}"
@page "/houses/update"
@inject HttpClient Http
@using System.Net.Http.Json
@using Client.Models
@inject NavigationManager NavigationManager

@*Author: Susanna Renström*@


    @if (House == null)
    {
        <p>Ett ögonblick...</p>
    }
    else
    {
    @if (showForm)
    {
    <EditForm Model="House" OnSubmit="Submit" FormName="edit" class="card form">
        <h3>Uppdatera bostad</h3>
        <div>
            <label>Mäklare</label>
            @if (Realtors != null && House.Realtor != null)
            {
                <select @bind="House.Realtor.Id">
                    @foreach (var realtor in Realtors)
                    {
                        if (RealtorId == House.Realtor.Id)
                        {
                            <option value="@realtor.Id" selected>@realtor.FirstName</option>
                        }
                        else
                        {
                            <option value="@realtor.Id">@realtor.FirstName</option>
                        }
                    }
                </select>
            }
        </div>
        <div>
            <label>Kategori</label>
            @if (Categories != null && House.Category != null)
            {
                <select @bind="House.Category.CategoryId">
                    @foreach (var category in Categories)
                    {
                        if (CategoryId == House.Category.CategoryId)
                        {
                            <option value="@category.CategoryId" selected>@category.CategoryName</option>
                        }
                        else
                        {
                            <option value="@category.CategoryId">@category.CategoryName</option>
                        }
                    }
                </select>
            }
        </div>
        <div>
            <label>Län</label>
            @if (Counties != null && House.County != null)
            {
                <select @bind="House.County.CountyId">
                    @foreach (var county in Counties)
                    {
                        if (CountyId == House.County.CountyId)
                        {
                            <option value="@county.CountyId" selected>@county.CountyId</option>
                        }
                        else
                        {
                            <option value="@county.CountyId">@county.CountyName</option>
                        }
                    }
                </select>
            }
        </div>
        <div>
            <label>Kommun</label>
            @if (Municipalities != null && House.Municipality != null)
            {
                <select @bind="House.Municipality.MunicipalityId">
                    @foreach (var municipality in Municipalities)
                    {
                        if (MunicipalityId == House.Municipality.MunicipalityId)
                        {
                            <option value="@municipality.MunicipalityId" selected>@municipality.MunicipalityId</option>
                        }
                        else
                        {
                            <option value="@municipality.MunicipalityId">@municipality.MunicipalityName</option>
                        }
                    }
                </select>
            }
        </div>
        <div>
            <label>Bildgalleri</label>
            <div class="flex-column form">
            @foreach (var image in HouseGallery)
            {
                <div>
                    <label>Bild URL</label>
                    <InputText @bind-Value="image.ImageURL"></InputText>
                </div>
            }
            </div>
        </div>
        <div>
            <label>Adress</label>
            <InputText id="adress" @bind-Value="House.Adress" />
        </div>
        <div>
            <label>Pris</label>
            <InputNumber id="price" @bind-Value="House.Price" />
        </div>
        <div>
            <label>Boarea</label>
            <InputNumber @bind-Value="House.LivingArea" />
        </div>
        <div>
            <label>Biarea</label>
            <InputNumber @bind-Value="House.AuxiliaryArea" />
        </div>
        <div>
            <label>Tomtarea</label>
            <InputNumber @bind-Value="House.PlotArea" />
        </div>
        <div>
            <label>Beskrivning</label>
            <InputTextArea @bind-Value="House.Description" />
        </div>
        <div>
            <label>Antal rum</label>
            <InputNumber @bind-Value="House.NumberOfRooms" />
        </div>
        <div>
            <label>Månadsavgift</label>
            <InputNumber @bind-Value="House.MonthlyFee" />
        </div>
        <div>
            <label>Årlig driftkostnad</label>
            <InputNumber @bind-Value="House.OperatingCostPerYear" />
        </div>
        <div>
            <label>Byggår</label>
            <InputNumber @bind-Value="House.YearOfConstruction" />
        </div>
  
        <button type="submit">Spara</button>
    </EditForm>
}}
<br />
<br />
<p>@Message</p>
<br />
<button @onclick="NavigateBackToHouses">Tillbaka till översikt</button>


@code {

    [Parameter]
    public int Id { get; set; }
    House House { get; set; } = new House();

    private int CountyId { get; set; }
    public List<County> Counties { get; set; } = new List<County>();

    private int MunicipalityId { get; set; }
    private List<Municipality> Municipalities { get; set; } = new List<Municipality>();
    private List<Municipality> FilteredMunicipalities { get; set; } = new List<Municipality>();

    public List<Image> Images { get; set; } = new List<Image>();
    public List<Image> HouseGallery { get; set; } = new List<Image>();

    private string RealtorId { get; set; }
    private List<Realtor> Realtors { get; set; } = new List<Realtor>();

    private int CategoryId { get; set; }
    private List<Category> Categories { get; set; } = new List<Category>();
    private bool showForm = true;
    private string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {   
        Counties = await Http.GetFromJsonAsync<List<County>>("api/county");
        Municipalities = await Http.GetFromJsonAsync<List<Municipality>>("api/municipality");
        Images = await Http.GetFromJsonAsync<List<Image>>("api/image");
        Categories = await Http.GetFromJsonAsync<List<Category>>("api/category");
        Realtors = await Http.GetFromJsonAsync<List<Realtor>>("api/realtor");

        var result = await Http.GetFromJsonAsync<House>($"api/house/{(int)Id}");
        if (result != null)
        {
            House = result;
            HouseGallery = House.Gallery;
        }
    }

    public async Task Submit()
    {
        House.County = await Http.GetFromJsonAsync<County>($"api/county/{House.County.CountyId}");
        House.Municipality = await Http.GetFromJsonAsync<Municipality>($"api/municipality/{House.Municipality.MunicipalityId}");
        House.Category = await Http.GetFromJsonAsync<Category>($"api/category/{House.Category.CategoryId}");
        House.Realtor = await Http.GetFromJsonAsync<Realtor>($"api/realtor/{House.Realtor.Id}");

        var result = await Http.PutAsJsonAsync<House>($"api/house/{(int)Id}", House);

        if (result.IsSuccessStatusCode)
        {
            showForm = false;
            Message = "Aktuellt hus har uppdaterats!";

        }
    }

    public async Task FilterMunicipalities()
    {
        House.County = await Http.GetFromJsonAsync<County>($"api/county/{CountyId}");
        FilteredMunicipalities = Municipalities.Where(m => m.CountyName == House.County.CountyName).ToList();
        StateHasChanged();
    }

    public async Task NavigateBackToHouses()
    {
        NavigationManager.NavigateTo($"/houses");
    }


}

   
