@page "/soldhouses"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using Models;
@using System.Net.Http.Json

@*Author: Eden Yusof-Ioannidis*@
@*Co-Author: Mikaela Älgekrans
    Updated code to only show realtors and houses within the same agency as logged in user
*@

<div class="card form">
    @if (Realtors != null && SelectedRealtor != null && FilteredHouses != null)
    {
        <div>
        <label>Välj mäklare</label>
        <select @bind-value="RealtorId" @onchange="FilterRealtors" @bind-value:event="oninput">
                <option value="">Välj mäklare</option>
            @foreach (var realtor in Realtors)
            {
                <option value="@realtor.Id">@realtor.FirstName @realtor.LastName</option>
            }
        </select>
        </div>
    }
</div>

@if (FilteredHouses == null)
{
    <p>Loading...</p>
}
else if (SelectedHouses.Count == 0)
{
    <div class="houses-list">
        <p>Denna mäklare har inte sålt några bostäder.</p>
    </div>

}
else
{
    <div class="houses-list">
        @if (String.IsNullOrEmpty(SelectedRealtor.Id))
        {
            <p>Visar alla tidigare sålda bostäder.</p>
        }
        else
        {
            <p>Visar tidigare sålda bostäder för @SelectedRealtor.FirstName @SelectedRealtor.LastName.</p>
        }
        @foreach (var house in SelectedHouses ?? Enumerable.Empty<House>())
        {
            <div class="house-card">
                <div class="card-left">
                    @if (house.Gallery != null && house.Gallery.Count > 0)
                    {
                        <img src="@house.Gallery.FirstOrDefault().ImageURL" />
                    }
                    else
                    {
                        <img src="https://bphomes.co.uk/wp-content/uploads/2023/03/placeholder-867x600.jpg" />
                    }
                </div>
                <div class="card-right">
                    <div class="house-info">
                        <div class="right">
                            <p>Ansvarig mäklare: <b>@house.Realtor.FirstName @house.Realtor.LastName</b></p>
                        </div>
                        <h3>@house.Adress</h3>
                        <p>@house.Municipality.MunicipalityName, @house.County.CountyName</p>
                        <p class="category-line">
                            @if (house.Category.CategoryName == "Villa")
                            {
                                <span class="material-symbols-outlined">
                                    home
                                </span>
                            }
                            else if (house.Category.CategoryName == "Par/Kedje/Radhus")
                            {
                                <span class="material-symbols-outlined">
                                    other_houses
                                </span>
                            }
                            else if (house.Category.CategoryName == "Lägenhet")
                            {
                                <span class="material-symbols-outlined">
                                    location_city
                                </span>
                            }
                            else if (house.Category.CategoryName == "Fritidsboende")
                            {
                                <span class="material-symbols-outlined">
                                    cottage
                                </span>
                            }
                            else if (house.Category.CategoryName == "Gård")
                            {
                                <span class="material-symbols-outlined">
                                    fence
                                </span>
                            }
                            @house.Category.CategoryName
                        </p>
                        <p>@(house.Price.ToString("N0") + " kr")</p>
                        <p id="card-description">@(house.Description?.Split('.')[0])</p>
                    </div>
                    <div>
                        <a href="/browse/@house.HouseId"><button>Se detaljer</button></a>
                    </div>
                </div>
            </div>

        }
    </div>
}

@code {
    private List<House> Houses { get; set; } = new List<House>();
    private List<House> FilteredHouses { get; set; } = new List<House>();
    private List<House> SelectedHouses { get; set; } = new List<House>();
    private List<Realtor> Realtors { get; set; } = new List<Realtor>();
    private Realtor SelectedRealtor { get; set; } = new Realtor();
    private Realtor? User { get; set; } = new Realtor();
    private string UserNameFromToken { get; set; } = "";
    private string RealtorId { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        Realtors = await Http.GetFromJsonAsync<List<Realtor>>("api/realtor");
        Houses = await Http.GetFromJsonAsync<List<House>>("api/house/getallsold");
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");

        if (!string.IsNullOrEmpty(token))
        {
            var currentTokenResponse = await Http.GetAsync($"api/authenticate/getusername?token={token}");
            if (currentTokenResponse.IsSuccessStatusCode)
            {
                UserNameFromToken = await currentTokenResponse.Content.ReadAsStringAsync();
                if (!string.IsNullOrEmpty(UserNameFromToken))
                {
                    User = await Http.GetFromJsonAsync<Realtor>($"api/realtor/getbyname?username={UserNameFromToken}");
                    if (User?.Agency != null)
                    {
                        Realtors = Realtors.Where(r => r.Agency?.AgencyId == User.Agency.AgencyId).ToList();
                        var agencyId = User.Agency.AgencyId;
                        FilteredHouses = Houses.Where(h => h.Realtor.Agency.AgencyId == agencyId).ToList();

                        SelectedHouses = FilteredHouses;
                    }
                }
            }
        }
    }

    private async Task FilterRealtors()
    {
        if (!string.IsNullOrEmpty(RealtorId))
        {
            SelectedRealtor = await Http.GetFromJsonAsync<Realtor>($"api/realtor/{RealtorId}");
            SelectedHouses = FilteredHouses.Where(h => h.Realtor.Id == SelectedRealtor.Id).ToList();
        }
        else
        {
            SelectedRealtor = new Realtor();
            SelectedHouses = FilteredHouses;
        }
        StateHasChanged();
    }
}
