@page "/houses"
@inject HttpClient Http
@using Models;
@using System.Net.Http.Json

<style>

    .center {
        padding-top: 30px;
        padding-bottom: 45px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        max-width: 1300px;
        margin: 0 auto; /* Detta centrera blocket horisontellt */
        margin-top: 32px;
        border-radius: 8px;
        box-shadow: 4px 4px 12px -5px;
    }

    .profile-info {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 370px;
        margin-bottom: 20px;
    }

    .image {
        width: 260px;
        height: 360px;
        border-radius: 2%;
        object-fit: cover; /* Klipper bilden för att passa in i behållaren */
        object-position: center; /* Centrerar bilden i behållaren */
    }

    .logo {
        max-width: 300px;
        max-height: 70px;
        object-fit: scale-down;
        padding-bottom: 5px;
    }

    .contact-info {
        margin-left: 20px;
    }

    .houses {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

    .realtor-house-card {
        border-radius: 2%;
        width: 400px;
        height: 267px;
        background-size: cover;
        background-position: center;
        position: relative;
        margin: 10px;
        box-shadow: 2px 2px 6px 0px rgba(0,0,0,0.20);
        background-repeat: no-repeat;
    }

        .realtor-house-card:hover {
            box-shadow: 0 0 10px 0px #34d399;
            cursor: pointer;
        }

    .house-info {
        position: absolute;
        bottom: 0;
        left: 0;
        background-color: white;
        width: 65%;
        padding: 10px;
        box-sizing: border-box;
    }

    .center-content {
        margin: 10px auto;
        padding: 5px 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        max-width: 800px;
    }

        .center-content > p {
            padding: 10px 0;
        }

    .sold {
        position: absolute;
        top: 40px;
        right: 0;
        background-color: #34d399;
        color: white;
        width: 100px;
        padding: 10px;
        border-radius: 2px;
    }

        .sold h2 {
            color: white;
        }

</style>

@if (ListOfHouses == null)
{

    <p>Ta det lugnt</p>
}
else
{
    <div class="house-details card">
        <div class="houses">
            @foreach (var house in ListOfHouses)
            {
                <div class="realtor-house-card" @onclick="() => NavigateToHouse(house.HouseId)" style="background-image: url('@(house.Gallery.FirstOrDefault()?.ImageURL ?? "https://bphomes.co.uk/wp-content/uploads/2023/03/placeholder-867x600.jpg")');">
                    <div class="house-info">
                        <h3>@house.Adress</h3>
                        <h2>@(house.Price.ToString("N0") + " kr")</h2>
                        <p>@house.Municipality.MunicipalityName, @house.County.CountyName</p>
                        @if (@house.Category != null)
                        {
                            <p class="category-line">
                                @if (@house.Category.CategoryName == "Villa")
                                {
                                    <span class="material-symbols-outlined">
                                        home
                                    </span>
                                }
                                else if (@house.Category.CategoryName == "Par/Kedje/Radhus")
                                {
                                    <span class="material-symbols-outlined">
                                        other_houses
                                    </span>
                                }
                                else if (@house.Category.CategoryName == "Lägenhet")
                                {
                                    <span class="material-symbols-outlined">
                                        location_city
                                    </span>
                                }
                                else if (@house.Category.CategoryName == "Fritidsboende")
                                {
                                    <span class="material-symbols-outlined">
                                        cottage
                                    </span>
                                }
                                else if (@house.Category.CategoryName == "Gård")
                                {
                                    <span class="material-symbols-outlined">
                                        fence
                                    </span>
                                }
                                @house.Category.CategoryName
                            </p>
                            <p>Antal rum: @house.NumberOfRooms | Boarea: @house.LivingArea ㎡</p>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
 }

<div class="button-row">
    <NavLink href="/houses/create" Match="NavLinkMatch.All"><button>Skapa ny bostad</button></NavLink>
    <NavLink href="/soldhouses" Match="NavLinkMatch.All"><button>Visa sålda bostäder</button></NavLink>
</div>

@code {

    private List<House> ListOfHouses { get; set; }



    protected override async Task OnInitializedAsync()
    { 
        ListOfHouses = await Http.GetFromJsonAsync<List<House>>("api/house");
    }

    void UpdateHouse(int id)
    {
        NavigationManager.NavigateTo($"/houses/update/{id}");
    }
    void DeleteHouse(int id)
    {
        NavigationManager.NavigateTo($"/houses/delete/{id}");
    }

    void NavigateToHouse(int id)
    {
        NavigationManager.NavigateTo($"/browse/{id}");
    }
}