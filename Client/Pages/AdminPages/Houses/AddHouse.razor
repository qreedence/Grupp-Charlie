@page "/houses/create"
@using Models;
@inject HttpClient Http
@using System.Net.Http.Json

@*Author: Mikaela Älgekrans*@

<EditForm Model="House" OnSubmit="Submit" FormName="CreateHouse">

    <div>
        <label>Realtor</label>
        @if (Realtors != null)
        {
            <select @bind="RealtorId">
                @foreach (var realtor in Realtors)
                {
                    <option value="@realtor.RealtorId">@realtor.FirstName</option>
                }
            </select>
        }
    </div>
    <div>
        <label>Category</label>
        @if (Categories != null)
        {
            <select @bind="CategoryId">
                <option value="">Välj kategori</option>
                @foreach (var category in Categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </select>
        }
    </div>
    <div>
        <label>Adress</label>
        <InputText @bind-Value="House.Adress"></InputText>
    </div>
    <div>
        <label>County</label>
        @if (Counties != null)
        {
            <select @bind="CountyId">
                @foreach (var county in Counties)
                {
                    <option value="@county.CountyId">@county.CountyName</option>
                }
            </select>
        }
    </div>
    <div>
        <label>Municipality</label>
        @if (Municipalities != null)
        {
            <select @bind="MunicipalityId">
                @foreach (var municipality in Municipalities)
                {
                    <option value="@municipality.MunicipalityId">@municipality.MunicipalityName</option>
                }
            </select>
        }
    </div>
    <div>
        <label>Price</label>
        <InputNumber @bind-Value="House.Price"></InputNumber>
    </div>
    <div>
        <label>Living Area</label>
        <InputNumber @bind-Value="House.LivingArea"></InputNumber>
    </div>
    <div>
        <label>Auxiliary Area</label>
        <InputNumber @bind-Value="House.AuxiliaryArea"></InputNumber>
    </div>
    <div>
        <label>Plot Area</label>
        <InputNumber @bind-Value="House.PlotArea"></InputNumber>
    </div>
    <div>
        <label>Description</label>
        <InputTextArea @bind-Value="House.Description"></InputTextArea>
    </div>
    <div>
        <label>Number of Rooms</label>
        <InputNumber @bind-Value="House.NumberOfRooms"></InputNumber>
    </div>
    <div>
        <label>Monthly Fee</label>
        <InputNumber @bind-Value="House.MonthlyFee"></InputNumber>
    </div>
    <div>
        <label>Operating Cost Per Year</label>
        <InputNumber @bind-Value="House.OperatingCostPerYear"></InputNumber>
    </div>
    <div>
        <label>Year of Construction</label>
        <InputNumber @bind-Value="House.YearOfConstruction"></InputNumber>
    </div>
    <div>
        <label>Gallery</label>
        @if (Images != null && Images.Count > 0)
        {
            @foreach (var image in Images)
            {
                <div>
                    <label>Image URL</label>
                    <InputText @bind-Value="image.ImageURL"></InputText>
                </div>
            }
        }
        <button type="button" @onclick="AddImageField">Add Image</button>
    </div>

    <button type="submit">Add House</button>
</EditForm>

@code {
    private House House { get; set; } = new House();

    private List<Category> Categories { get; set; } = new List<Category>();
    private List<County> Counties { get; set; } = new List<County>();
    private List<Realtor> Realtors { get; set; } = new List<Realtor>();
    private List<Municipality> Municipalities { get; set; } = new List<Municipality>();
    private int CategoryId { get; set; }
    private int CountyId { get; set; }
    private int RealtorId { get; set; }
    private int MunicipalityId { get; set; }

    public List<Image> Images { get; set; } = new List<Image>();

    protected override async Task OnInitializedAsync()
    {   
        Municipalities = await Http.GetFromJsonAsync<List<Municipality>>("api/municipality");
        Categories = await Http.GetFromJsonAsync<List<Category>>("api/category");
        Counties = await Http.GetFromJsonAsync<List<County>>("api/county");
        Realtors = await Http.GetFromJsonAsync<List<Realtor>>("api/realtor");
    }

    void AddImageField()
    {      
        Images.Add(new Image());
    }

    public async Task Submit()
    {
        try
        {
            House.County = await Http.GetFromJsonAsync<County>($"api/county/{CountyId}");
            House.Municipality = await Http.GetFromJsonAsync<Municipality>($"api/municipality/{MunicipalityId}");
            House.Category = await Http.GetFromJsonAsync<Category>($"api/category/{CategoryId}");
            House.Realtor = await Http.GetFromJsonAsync<Realtor>($"api/realtor/{RealtorId}");
            House.Gallery = Images;     
            
            await Http.PostAsJsonAsync<House>("api/House", House);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"There was an error: {ex}");
        }
    }
}

