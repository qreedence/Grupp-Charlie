@page "/realtors/create"
@using Models;
@inject HttpClient Http

@*Author: Eden Yusof-Ioannidis*@

<EditForm Model="Realtor" OnSubmit="Submit" FormName="CreateRealtor" class="card form">
    <div>
        <label>First Name</label>
        <InputText @bind-Value="Realtor.FirstName"></InputText>
    </div>
    <div>
        <label>Last Name</label>
        <InputText @bind-Value="Realtor.LastName"></InputText>
    </div>
    <div>
        <label>Email</label>
        <InputText @bind-Value="Realtor.Email"></InputText>
    </div>

    <div>
        <label>Avatar URL</label>
        <InputText @bind-Value="Realtor.Avatar"></InputText>
    </div>
    <div>
        <label>Agency</label>
        @if (Agencies != null)
        {
            <select @bind="AgencyId">
                <option value="">Välj mäklarfirma</option>
                @foreach (var agency in Agencies)
                {
                    <option value="@agency.AgencyId">@agency.NameOfAgency</option>
                }
            </select>
            <p>@ErrorMessage</p>
        }
    </div>

    <button type="submit">Create Realtor</button>
</EditForm>


@code {
    public Realtor Realtor { get; set; } = new Realtor();
    public List<Agency> Agencies { get; set; } = new List<Agency>();
    public int AgencyId { get; set; } 
    public string ErrorMessage { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        Agencies = await Http.GetFromJsonAsync<List<Agency>>("api/agency");


    }

    public async Task Submit()
    {
        if (AgencyId != 0)
        {
            Realtor.Agency = await Http.GetFromJsonAsync<Agency>($"api/agency/{AgencyId}");
            await Http.PostAsJsonAsync<Realtor>("api/realtor", Realtor);
            ErrorMessage = "";
        }
        else
        {
            ErrorMessage = "Välj en mäklarfirma.";
        }

    }
}
