@page "/realtor/update/{id}"
@inject HttpClient Http
@using System.Net.Http.Json
@using Client.Models
@using Client.Services
@inject MessageService MessageService

@*Author: Mikaela Älgekrans*@

<div class="center">
    <h3>Uppdatera din profil</h3>

    @if (Realtor == null)
    {
        <p>Ett ögonblick...</p>
    }
    else
    {
        <EditForm Model="Realtor" OnSubmit="Submit" FormName="edit" class="card form">
            <div>
                <img src="@Realtor.Avatar" class="image" />
            </div>
            <div>
                <label>Profilbild</label>
                <InputText @bind-Value="Realtor.Avatar" @oninput="UpdateImage"></InputText>
            </div>
            <div>
                <label>Mäklarbyrå</label>
                @if (Agencies != null && Realtor.Agency != null)
                {
                    <select @bind="Realtor.Agency.AgencyId">
                        @foreach (var agency in Agencies)
                        {
                            if (AgencyId == Realtor.Agency.AgencyId)
                            {
                                <option value="@agency.AgencyId" selected>@agency.NameOfAgency</option>
                            }
                            else
                            {
                                <option value="@agency.AgencyId">@agency.NameOfAgency</option>
                            }
                        }
                    </select>
                }
            </div>
            <div>
                <label>Förnamn</label>
                <InputText id="firstName" @bind-Value="Realtor.FirstName" required/>
            </div>
            <div>
                <label>Efternamn</label>
                <InputText id="lastName" @bind-Value="Realtor.LastName" required />
            </div>
            <div>
                <label>Epostadress</label>
                <InputText id="email" @bind-Value="Realtor.Email" />
            </div>
            <div>
                <label>Telefonnummer</label>
                <InputText id="phonenumber" @bind-Value="Realtor.PhoneNumber" />
            </div>
            @*    <div>
        <label>Lösenord</label>
        <InputText id="passwordhash" @bind-Value="Realtor.PasswordHash" />
        </div> *@

            <div style="display: flex; gap: 0.1rem;justify-content:center;">
                <button type="submit">Spara</button>
                <button @onclick="() => NavigateBackToRealtor(CreateErrorMessage())">Avbryt</button>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    Realtor Realtor { get; set; } = new Realtor();
    private string Message { get; set; } = "";
    public int AgencyId { get; set; }
    private List<Agency> Agencies { get; set; } = new List<Agency>();

    private void UpdateImage(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            Realtor.Avatar = "https://static.vecteezy.com/system/resources/thumbnails/003/337/584/small/default-avatar-photo-placeholder-profile-icon-vector.jpg";
        }
        else
        {
            Realtor.Avatar = e.Value.ToString();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Agencies = await Http.GetFromJsonAsync<List<Agency>>($"api/agency");

        var result = await Http.GetFromJsonAsync<Realtor>($"api/realtor/{(string)Id}");
        if (result != null)
        {
            Realtor = result;
        }
    }

    public async Task Submit()
    {
        Realtor.Agency = await Http.GetFromJsonAsync<Agency>($"api/agency/{Realtor.Agency.AgencyId}");

        var result = await Http.PutAsJsonAsync<Realtor>($"api/realtor/{(string)Id}", Realtor);

        if (result.IsSuccessStatusCode)
        {            
            var message = new Message
                {
                    Text = "Användaruppgifterna har uppdaterats!",
                    Type = MessageType.Success
                };
            await NavigateBackToRealtor(message);
        }
    }

    public async Task NavigateBackToRealtor(Message message)
    {
        if (message != null)
        {
            MessageService.SendMessage(message); // Sends Message to the Navigated page
        }
        NavigationManager.NavigateTo($"/realtor/profile/{(string)Id}");
    }

    void NavigateBackToRealtor()
    {
        NavigationManager.NavigateTo($"/realtor/profile/{(string)Id}");
    }

    public Message CreateErrorMessage()
    {
        return new Message { Text = "Uppdateringen avbröts.", Type = MessageType.Error };
    }

    
}
