@page "/login"
@inject HttpClient Http
@using System.Net.Http.Json
@inject IJSRuntime JSRuntime

@*Authors: Susanna Renström, Mikaela Älgekrans, Eden Yusof-Ioannidis*@

<EditForm Model="LoginModel" OnSubmit="Submit" class="card form">
    <h3>Logga in    </h3>
    <div>
        <label>Användarnamn</label>
        <InputText @bind-Value="LoginModel.Username"></InputText>
    </div>
    <div>
        <label>Lösenord</label>
        <InputText type="password" @bind-Value="LoginModel.Password"></InputText>
    </div>
    <button type="submit">Logga in</button>
    @if(!String.IsNullOrEmpty(ErrorMessage))
    {
    <div class="error-box">
        <p>@ErrorMessage</p>
    </div>
    }

</EditForm>




@code {
    public LoginModel LoginModel {get; set; } = new LoginModel();
    public string ErrorMessage { get; set; } = "";

    public async Task Submit()
    {
        var responseMessage = await Http.PostAsJsonAsync<LoginModel>("api/authenticate/login", LoginModel);
        if (responseMessage.IsSuccessStatusCode)
        {
            var responseContent = await responseMessage.Content.ReadFromJsonAsync<Response>();

            var token = responseContent.Token;

            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
            NavigationManager.NavigateTo($"/", forceLoad: true);
            
        }
        else
        { ErrorMessage = "Något gick fel. Kontrollera dina inloggningsuppgifter samt att ditt konto har blivit godkänt."; }
    }

}
